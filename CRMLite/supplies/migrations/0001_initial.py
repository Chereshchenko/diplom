# Generated by Django 5.2.1 on 2025-08-06 13:03

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('products', '0001_initial'),
        ('suppliers', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Supply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_date', models.DateField(verbose_name='Дата поставки')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='supplies', to='suppliers.supplier', verbose_name='Поставщик')),
            ],
            options={
                'verbose_name': 'Поставка',
                'verbose_name_plural': 'Поставки',
                'ordering': ['-delivery_date'],
            },
        ),
        migrations.CreateModel(
            name='SupplyProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Количество')),
                ('purchase_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена закупки')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product', verbose_name='Товар')),
                ('supply', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supplies.supply', verbose_name='Поставка')),
            ],
            options={
                'verbose_name': 'Товар в поставке',
                'verbose_name_plural': 'Товары в поставках',
                'unique_together': {('supply', 'product')},
            },
        ),
        migrations.AddField(
            model_name='supply',
            name='products',
            field=models.ManyToManyField(related_name='supplies', through='supplies.SupplyProduct', to='products.product', verbose_name='Товары'),
        ),
    ]
