# Generated by Django 5.2.1 on 2025-07-26 08:12

import django.contrib.auth.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название товара')),
                ('quantity', models.PositiveIntegerField(default=0, verbose_name='Количество на складе')),
                ('purchase_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Закупочная цена')),
                ('sale_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена продажи')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('is_company_owner', models.BooleanField(default=False, verbose_name='Владелец компании')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, unique=True, verbose_name='Название компании')),
                ('inn', models.CharField(max_length=20, unique=True, verbose_name='ИНН')),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='owned_company', to=settings.AUTH_USER_MODEL, verbose_name='Владелец')),
            ],
            options={
                'verbose_name': 'Компания',
                'verbose_name_plural': 'Компании',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employees', to='crm.company', verbose_name='Компания'),
        ),
        migrations.CreateModel(
            name='ProductSale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Количество')),
                ('sale_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена продажи')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='crm.product', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Товар в продаже',
                'verbose_name_plural': 'Товары в продажах',
            },
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('buyer_name', models.CharField(max_length=255, verbose_name='Имя покупателя')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Дата продажи')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sales', to='crm.company', verbose_name='Компания')),
                ('products', models.ManyToManyField(related_name='sales', through='crm.ProductSale', to='crm.product', verbose_name='Товары')),
            ],
            options={
                'verbose_name': 'Продажа',
                'verbose_name_plural': 'Продажи',
            },
        ),
        migrations.AddField(
            model_name='productsale',
            name='sale',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.sale', verbose_name='Продажа'),
        ),
        migrations.CreateModel(
            name='Storage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=255, verbose_name='Адрес склада')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='storage', to='crm.company', verbose_name='Компания')),
            ],
            options={
                'verbose_name': 'Склад',
                'verbose_name_plural': 'Склады',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='storage',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='crm.storage', verbose_name='Склад'),
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название поставщика')),
                ('inn', models.CharField(max_length=12, verbose_name='ИНН поставщика')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suppliers', to='crm.company', verbose_name='Компания')),
            ],
            options={
                'verbose_name': 'Поставщик',
                'verbose_name_plural': 'Поставщики',
                'unique_together': {('inn', 'company')},
            },
        ),
        migrations.CreateModel(
            name='Supply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_date', models.DateField(verbose_name='Дата поставки')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='supplies', to='crm.supplier', verbose_name='Поставщик')),
            ],
            options={
                'verbose_name': 'Поставка',
                'verbose_name_plural': 'Поставки',
                'ordering': ['-delivery_date'],
            },
        ),
        migrations.CreateModel(
            name='SupplyProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Количество')),
                ('purchase_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена закупки')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.product', verbose_name='Товар')),
                ('supply', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.supply', verbose_name='Поставка')),
            ],
            options={
                'verbose_name': 'Товар в поставке',
                'verbose_name_plural': 'Товары в поставках',
                'unique_together': {('supply', 'product')},
            },
        ),
        migrations.AddField(
            model_name='supply',
            name='products',
            field=models.ManyToManyField(related_name='supplies', through='crm.SupplyProduct', to='crm.product', verbose_name='Товары'),
        ),
        migrations.AlterUniqueTogether(
            name='productsale',
            unique_together={('sale', 'product')},
        ),
    ]
